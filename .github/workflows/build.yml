name: Build container image and push to GHCR only on the default branch

on:
  workflow_call:

env:
  PUSH: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
  IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build-by-platform:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            image: ubuntu-24.04
            docker-platform: linux/amd64
          - platform: arm64
            image: ubuntu-24.04-arm
            docker-platform: linux/arm64

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image locally with Buildx
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.docker-platform }}
          tags: ${{ env.IMAGE }}:latest-${{ matrix.platform }}
          outputs: type=docker

      - name: Push arch-specific image
        if: ${{ env.PUSH == 'true' }}
        run: docker push ${{ env.IMAGE }}:latest-${{ matrix.platform }}

  combine-builds:
    needs: build-by-platform
    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        if: ${{ env.PUSH == 'true' }}
        run: |
          docker manifest create ${{ env.IMAGE }}:latest \
            ${{ env.IMAGE }}:latest-amd64 \
            ${{ env.IMAGE }}:latest-arm64
          docker manifest push ${{ env.IMAGE }}:latest

  untagged-cleanup:
    needs: [build-by-platform, combine-builds]
    runs-on: ubuntu-latest

    steps:
      - name: Clean up untagged images
        uses: actions/delete-package-versions@v5
        with:
          owner: ${{ github.repository_owner }}
          token: ${{ secrets.GITHUB_TOKEN }}
          package-type: container
          package-name: ${{ github.event.repository.name }}
          delete-only-untagged-versions: true
