name: Build and push container image to GHCR

on:
  workflow_call:

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
  DEFAULT_RUNNER: ubuntu-24.04
  AMD64_RUNNER: ubuntu-24.04
  ARM64_RUNNER: ubuntu-24.04-arm

jobs:
  meta:
    runs-on: $DEFAULT_RUNNER

    permissions:
      contents: read

    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}

    steps:
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.IMAGE }}
          tags: |
            # "latest" only on default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # otherwise branch name
            type=ref,event=branch

  build:
    needs: meta

    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: $AMD64_RUNNER
          - platform: linux/arm64
            runner: $ARM64_RUNNER
    runs-on: ${{ matrix.runner }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (by digest)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ needs.meta.outputs.labels }}
          outputs: type=registry,push-by-digest=true,name=${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export image digest ref
        run: |
          mkdir -p digests
          echo "${{ env.IMAGE }}@${{ steps.build.outputs.digest }}" > "digests/${{ matrix.platform }}.txt"

      - name: Upload digests artifact
        uses: actions/upload-artifact@v4
        with:
          name: digests
          path: digests/*.txt

  merge:
    needs: [meta, build]

    runs-on: $DEFAULT_RUNNER

    permissions:
      contents: read
      packages: write

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          name: digests
          path: digests

      - name: Set up Docker Buildx (for imagetools)
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        env:
          TAGS: ${{ needs.meta.outputs.tags }}
        run: |
          TAG_ARGS=""
          # metadata-action outputs tags as newline-separated values
          while IFS= read -r tag; do
            [ -z "$tag" ] && continue
            TAG_ARGS="$TAG_ARGS -t $tag"
          done <<< "$TAGS"

          REFS=$(paste -sd " " digests/*.txt)
          docker buildx imagetools create $TAG_ARGS $REFS

  cleanup:
    needs: merge

    runs-on: $DEFAULT_RUNNER

    permissions:
      packages: write

    steps:
      - name: Clean up untagged images
        uses: actions/delete-package-versions@v5
        with:
          package-type: container
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ github.repository_owner }}
          package-name: ${{ github.event.repository.name }}
          delete-only-untagged-versions: true
